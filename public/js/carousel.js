var Carousel = (function () {
    function Carousel(element) {
        this.element = element;
        this.items = this.element.children;
        this.itemCount = this.items.length;
        this.targetItem = 0;
        this.time = 6000;
        this.initializeDOM();
        this.startUpdateLoop();
    }
    Carousel.prototype.startUpdateLoop = function () {
        this.loop = setInterval(this.updateLoop, this.time, this);
    };
    Carousel.prototype.updateLoop = function (carousel) {
        carousel.targetItem++;
        carousel.setItemsLocations();
    };
    Carousel.prototype.initializeDOM = function () {
        this.addCarouselItemClass();
        this.setItemsLocations();
    };
    Carousel.prototype.addCarouselItemClass = function () {
        for (var i = 0; i < this.itemCount; i++) {
            Utils.addClass(this.items[i], "carousel-item");
        }
    };
    Carousel.prototype.setItemsLocations = function () {
        for (var i = 0; i < this.itemCount; i++) {
            this.setItemLocation(this.items[i], i, this.itemCount, this.targetItem);
        }
    };
    Carousel.prototype.setItemLocation = function (item, index, length, target) {
        var offset = this.getCalculatedItemLocation(index, length, target) * this.element.clientWidth;
        item.setAttribute("style", "left: " + offset.toString() + "px;");
    };
    Carousel.prototype.getCalculatedItemLocation = function (index, length, target) {
        var value = (target - index) % length;
        var mid = Math.floor(length / 2);
        return (value <= mid && value >= -mid) ?
            value :
            ((value > mid) ?
                (value - length) :
                (value + length));
    };
    return Carousel;
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcm91c2VsLnRzIl0sIm5hbWVzIjpbIkNhcm91c2VsIiwiQ2Fyb3VzZWwuY29uc3RydWN0b3IiLCJDYXJvdXNlbC5zdGFydFVwZGF0ZUxvb3AiLCJDYXJvdXNlbC51cGRhdGVMb29wIiwiQ2Fyb3VzZWwuaW5pdGlhbGl6ZURPTSIsIkNhcm91c2VsLmFkZENhcm91c2VsSXRlbUNsYXNzIiwiQ2Fyb3VzZWwuc2V0SXRlbXNMb2NhdGlvbnMiLCJDYXJvdXNlbC5zZXRJdGVtTG9jYXRpb24iLCJDYXJvdXNlbC5nZXRDYWxjdWxhdGVkSXRlbUxvY2F0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQTtJQVFJQSxrQkFBWUEsT0FBb0JBO1FBQzVCQyxJQUFJQSxDQUFDQSxPQUFPQSxHQUFHQSxPQUFPQSxDQUFDQTtRQUN2QkEsSUFBSUEsQ0FBQ0EsS0FBS0EsR0FBR0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsUUFBUUEsQ0FBQ0E7UUFDbkNBLElBQUlBLENBQUNBLFNBQVNBLEdBQUdBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLE1BQU1BLENBQUNBO1FBQ25DQSxJQUFJQSxDQUFDQSxVQUFVQSxHQUFHQSxDQUFDQSxDQUFDQTtRQUNwQkEsSUFBSUEsQ0FBQ0EsSUFBSUEsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFFakJBLElBQUlBLENBQUNBLGFBQWFBLEVBQUVBLENBQUNBO1FBQ3JCQSxJQUFJQSxDQUFDQSxlQUFlQSxFQUFFQSxDQUFDQTtJQUMzQkEsQ0FBQ0E7SUFFT0Qsa0NBQWVBLEdBQXZCQTtRQUNJRSxJQUFJQSxDQUFDQSxJQUFJQSxHQUFHQSxXQUFXQSxDQUFDQSxJQUFJQSxDQUFDQSxVQUFVQSxFQUFFQSxJQUFJQSxDQUFDQSxJQUFJQSxFQUFFQSxJQUFJQSxDQUFDQSxDQUFDQTtJQUM5REEsQ0FBQ0E7SUFFT0YsNkJBQVVBLEdBQWxCQSxVQUFtQkEsUUFBa0JBO1FBQ2pDRyxRQUFRQSxDQUFDQSxVQUFVQSxFQUFFQSxDQUFDQTtRQUN0QkEsUUFBUUEsQ0FBQ0EsaUJBQWlCQSxFQUFFQSxDQUFDQTtJQUNqQ0EsQ0FBQ0E7SUFFT0gsZ0NBQWFBLEdBQXJCQTtRQUNJSSxJQUFJQSxDQUFDQSxvQkFBb0JBLEVBQUVBLENBQUNBO1FBQzVCQSxJQUFJQSxDQUFDQSxpQkFBaUJBLEVBQUVBLENBQUNBO0lBQzdCQSxDQUFDQTtJQUVPSix1Q0FBb0JBLEdBQTVCQTtRQUNJSyxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQSxTQUFTQSxFQUFFQSxDQUFDQSxFQUFFQSxFQUFFQSxDQUFDQTtZQUN0Q0EsS0FBS0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsRUFBRUEsZUFBZUEsQ0FBQ0EsQ0FBQ0E7UUFDbkRBLENBQUNBO0lBQ0xBLENBQUNBO0lBRU9MLG9DQUFpQkEsR0FBekJBO1FBQ0lNLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBLFNBQVNBLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLENBQUNBO1lBQ3RDQSxJQUFJQSxDQUFDQSxlQUFlQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxJQUFJQSxDQUFDQSxTQUFTQSxFQUFFQSxJQUFJQSxDQUFDQSxVQUFVQSxDQUFDQSxDQUFDQTtRQUM1RUEsQ0FBQ0E7SUFDTEEsQ0FBQ0E7SUFFT04sa0NBQWVBLEdBQXZCQSxVQUF3QkEsSUFBYUEsRUFBRUEsS0FBYUEsRUFBRUEsTUFBY0EsRUFBRUEsTUFBY0E7UUFDaEZPLElBQUlBLE1BQU1BLEdBQVdBLElBQUlBLENBQUNBLHlCQUF5QkEsQ0FBQ0EsS0FBS0EsRUFBRUEsTUFBTUEsRUFBRUEsTUFBTUEsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsV0FBV0EsQ0FBQ0E7UUFDdEdBLElBQUlBLENBQUNBLFlBQVlBLENBQUNBLE9BQU9BLEVBQUVBLFFBQVFBLEdBQUdBLE1BQU1BLENBQUNBLFFBQVFBLEVBQUVBLEdBQUdBLEtBQUtBLENBQUNBLENBQUNBO0lBQ3JFQSxDQUFDQTtJQUVPUCw0Q0FBeUJBLEdBQWpDQSxVQUFrQ0EsS0FBYUEsRUFBRUEsTUFBY0EsRUFBRUEsTUFBY0E7UUFDM0VRLElBQUlBLEtBQUtBLEdBQVdBLENBQUNBLE1BQU1BLEdBQUdBLEtBQUtBLENBQUNBLEdBQUdBLE1BQU1BLENBQUNBO1FBQzlDQSxJQUFJQSxHQUFHQSxHQUFXQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxNQUFNQSxHQUFHQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUN6Q0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsS0FBS0EsSUFBSUEsR0FBR0EsSUFBSUEsS0FBS0EsSUFBSUEsQ0FBQ0EsR0FBR0EsQ0FBQ0E7WUFDbENBLEtBQUtBO1lBQ0xBLENBQUNBLENBQUNBLEtBQUtBLEdBQUdBLEdBQUdBLENBQUNBO2dCQUNWQSxDQUFDQSxLQUFLQSxHQUFHQSxNQUFNQSxDQUFDQTtnQkFDaEJBLENBQUNBLEtBQUtBLEdBQUdBLE1BQU1BLENBQUNBLENBQUNBLENBQUNBO0lBQzlCQSxDQUFDQTtJQUNMUixlQUFDQTtBQUFEQSxDQTNEQSxBQTJEQ0EsSUFBQSIsImZpbGUiOiJjYXJvdXNlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENhcm91c2VsIHtcbiAgICBwcml2YXRlIGVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICAgIHByaXZhdGUgaXRlbXM6IEhUTUxDb2xsZWN0aW9uO1xuICAgIHByaXZhdGUgaXRlbUNvdW50OiBudW1iZXI7XG4gICAgcHJpdmF0ZSB0YXJnZXRJdGVtOiBudW1iZXI7XG4gICAgcHJpdmF0ZSB0aW1lOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBsb29wO1xuXG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogSFRNTEVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuZWxlbWVudC5jaGlsZHJlbjtcbiAgICAgICAgdGhpcy5pdGVtQ291bnQgPSB0aGlzLml0ZW1zLmxlbmd0aDtcbiAgICAgICAgdGhpcy50YXJnZXRJdGVtID0gMDtcbiAgICAgICAgdGhpcy50aW1lID0gNjAwMDtcblxuICAgICAgICB0aGlzLmluaXRpYWxpemVET00oKTtcbiAgICAgICAgdGhpcy5zdGFydFVwZGF0ZUxvb3AoKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXJ0VXBkYXRlTG9vcCgpIHtcbiAgICAgICAgdGhpcy5sb29wID0gc2V0SW50ZXJ2YWwodGhpcy51cGRhdGVMb29wLCB0aGlzLnRpbWUsIHRoaXMpO1xuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlTG9vcChjYXJvdXNlbDogQ2Fyb3VzZWwpIHtcbiAgICAgICAgY2Fyb3VzZWwudGFyZ2V0SXRlbSsrO1xuICAgICAgICBjYXJvdXNlbC5zZXRJdGVtc0xvY2F0aW9ucygpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaW5pdGlhbGl6ZURPTSgpIHtcbiAgICAgICAgdGhpcy5hZGRDYXJvdXNlbEl0ZW1DbGFzcygpO1xuICAgICAgICB0aGlzLnNldEl0ZW1zTG9jYXRpb25zKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhZGRDYXJvdXNlbEl0ZW1DbGFzcygpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLml0ZW1Db3VudDsgaSsrKSB7XG4gICAgICAgICAgICBVdGlscy5hZGRDbGFzcyh0aGlzLml0ZW1zW2ldLCBcImNhcm91c2VsLWl0ZW1cIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIHNldEl0ZW1zTG9jYXRpb25zKCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbUNvdW50OyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuc2V0SXRlbUxvY2F0aW9uKHRoaXMuaXRlbXNbaV0sIGksIHRoaXMuaXRlbUNvdW50LCB0aGlzLnRhcmdldEl0ZW0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzZXRJdGVtTG9jYXRpb24oaXRlbTogRWxlbWVudCwgaW5kZXg6IG51bWJlciwgbGVuZ3RoOiBudW1iZXIsIHRhcmdldDogbnVtYmVyKSB7XG4gICAgICAgIHZhciBvZmZzZXQ6IG51bWJlciA9IHRoaXMuZ2V0Q2FsY3VsYXRlZEl0ZW1Mb2NhdGlvbihpbmRleCwgbGVuZ3RoLCB0YXJnZXQpICogdGhpcy5lbGVtZW50LmNsaWVudFdpZHRoO1xuICAgICAgICBpdGVtLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwibGVmdDogXCIgKyBvZmZzZXQudG9TdHJpbmcoKSArIFwicHg7XCIpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0Q2FsY3VsYXRlZEl0ZW1Mb2NhdGlvbihpbmRleDogbnVtYmVyLCBsZW5ndGg6IG51bWJlciwgdGFyZ2V0OiBudW1iZXIpIHtcbiAgICAgICAgdmFyIHZhbHVlOiBudW1iZXIgPSAodGFyZ2V0IC0gaW5kZXgpICUgbGVuZ3RoO1xuICAgICAgICB2YXIgbWlkOiBudW1iZXIgPSBNYXRoLmZsb29yKGxlbmd0aCAvIDIpO1xuICAgICAgICByZXR1cm4gKHZhbHVlIDw9IG1pZCAmJiB2YWx1ZSA+PSAtbWlkKSA/XG4gICAgICAgICAgICB2YWx1ZSA6XG4gICAgICAgICAgICAoKHZhbHVlID4gbWlkKSA/XG4gICAgICAgICAgICAgICAgKHZhbHVlIC0gbGVuZ3RoKSA6XG4gICAgICAgICAgICAgICAgKHZhbHVlICsgbGVuZ3RoKSk7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9